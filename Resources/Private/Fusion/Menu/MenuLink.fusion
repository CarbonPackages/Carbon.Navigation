prototype(Carbon.Navigation:MenuLink) < prototype(Neos.Fusion:Component) {
    targetSchema = Neos.Fusion:Case {
        isShortcutWithTargetNode {
            condition = ${q(node).is('[instanceof Neos.Neos:Shortcut]') && q(node).property('targetMode') == 'selectedTarget'}
            renderer = Neos.Fusion:Value {
                scheme = ${Neos.Link.getScheme(q(node).property('target'))}
                value = ${this.scheme ? this.scheme : 'external'}
            }
        }
        default {
            condition = true
            renderer = 'node'
        }
    }
    href = Neos.Neos:NodeUri {
        node = ${node}
    }
    level = Carbon.Navigation:MenuLevel

    wrapAnchorWithSpan = ${wrapAnchorWithSpan}
    content = ${q(node).property('title')}

    renderer = Neos.Fusion:Tag {
        tagName = 'a'
        attributes {
            rel = ${props.targetSchema == 'node' ? false : 'noopener'}
            target = ${props.targetSchema == 'node' || String.startsWith(href, 'mailto:') ? false : '_blank'}
            class = Neos.Fusion:RawArray {
                link = 'nav-link'
                level = ${props.level}
                targetSchema = ${'-' + props.targetSchema}
            }
            href = ${props.href}
        }
        content = ${props.content}
        content.@process.wrap = Neos.Fusion:Tag {
            @if.wrap = ${props.wrapAnchorWithSpan}
            tagName = 'span'
            content = ${value}
        }
    }
}
