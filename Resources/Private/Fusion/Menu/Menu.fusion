prototype(Carbon.Navigation:Menu) < prototype(Carbon.Navigation:Mixin) {
    // The properties of an item is available under following variables
    // - item.menuLevel
    // - item.subItems
    // - item.state

    namespace = ${Configuration.setting('Carbon.Navigation.Menu.namespace')}
    wrapText = ${Configuration.setting('Carbon.Navigation.Menu.wrapText')}
    listTag = ${Configuration.setting('Carbon.Navigation.Menu.listTag')}
    elementTag = ${Configuration.setting('Carbon.Navigation.Menu.elementTag')}

    maximumLevels = ${Configuration.setting('Carbon.Navigation.Menu.maximumLevels')}
    filter = ${Configuration.setting('Carbon.Navigation.Menu.filter')}
    showHome = ${Configuration.setting('Carbon.Navigation.Menu.showHome')}
    renderHiddenInIndex = ${Configuration.setting('Carbon.Navigation.Menu.renderHiddenInIndex')}
    entryLevel = ${this.startingPoint ? 0 : 1}

    renderClass = ${Configuration.setting('Carbon.Navigation.Menu.renderClass')}

    prototype(Carbon.Navigation:Class) {
        isFirst = ${showHome ? false : iteration && iteration.isFirst}
    }

    beforeFirst = Carbon.Navigation:Link {
        @if.weAreOnTheMainLevel = ${showHome && item.menuLevel == entryLevel}
        node = ${site}
        content = ${q(site).property('title')}

        prototype(Carbon.Navigation:Class) {
            isFirst = true
            isLast = false
            state = ${documentNode == site ? 'current' : 'normal'}
            hasSubpages = false
        }

        additionalClass = Carbon.Navigation:Class {
            name = 'link'
        }
        @process.wrap = Neos.Fusion:Tag {
            @if.hasTag = ${elementTag}
            tagName = ${elementTag}
            attributes.class = Carbon.Navigation:Class {
                name = 'element'
            }
            content = ${value}
        }
    }
}
