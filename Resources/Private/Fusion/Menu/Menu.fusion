prototype(Carbon.Navigation:Menu) < prototype(Neos.Fusion:Component) {
    namespace = ${Configuration.setting('Carbon.Navigation.Menu.namespace')}
    wrapText = ${Configuration.setting('Carbon.Navigation.Menu.wrapText')}
    listTag = ${Configuration.setting('Carbon.Navigation.Menu.listTag')}
    elementTag = ${Configuration.setting('Carbon.Navigation.Menu.elementTag')}
    showHome = ${Configuration.setting('Carbon.Navigation.Menu.showHome')}
    renderClass = ${Configuration.setting('Carbon.Navigation.Menu.renderClass')}
    homeLabel = ${Translation.translate('home', 'Home', [], 'Main', 'Carbon.Navigation')}

    entryLevel = ${this.startingPoint ? 0 : 1}
    maximumLevels = ${Configuration.setting('Carbon.Navigation.Menu.maximumLevels')}
    startingPoint = null
    lastLevel = null
    filter = ${Configuration.setting('Carbon.Navigation.Menu.filter')}
    renderHiddenInIndex = ${Configuration.setting('Carbon.Navigation.Menu.renderHiddenInIndex')}
    itemCollection = null
    beforeFirst = null
    afterLast = null

    renderer = Neos.Fusion:Component {
        @apply.props = ${props}
        @if.render = ${Type.isArray(this.menuItems) && Array.length(this.menuItems)}
        @process.shy = Carbon.Navigation:Hyphen

        menuItems = Neos.Neos:MenuItems {
            @apply.props = ${props}
        }

        siteItem = Neos.Fusion:DataStructure {
            node = ${site}
            state = ${documentNode == site ? 'current' : 'normal'}
            label = ${site.label}
            menuLevel = 1
        }
        overwriteIsFirst = ${props.showHome ? false : null}

        renderer = afx`
            <Carbon.Navigation:Tag {...props} item={Array.first(props.menuItems)} tagName={props.listTag} name='list'>
                {props.beforeFirst}
                <Carbon.Navigation:Tag @if.set={props.showHome} {...props} overwriteIsFirst={true} tagName={props.elementTag} item={props.siteItem} name='element'>
                    <Carbon.Navigation:Link {...props} overwriteIsFirst={true} item={props.siteItem} label={props.homeLabel} name='link' />
                </Carbon.Navigation:Tag>
                <Carbon.Navigation:Loop {...props} items={props.menuItems} />
                {props.afterLast}
            </Carbon.Navigation:Tag>
        `
    }
}
